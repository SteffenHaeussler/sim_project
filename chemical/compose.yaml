services:

  db:
    image: postgres
    container_name: db
    restart: always
    # set shared memory limit when using docker compose
    shm_size: 128mb
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data  # Persist data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d chemical"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      client:
        aliases:
          - postgres_service

  sim_api:
    image: sim_api:latest
    container_name: sim_api
    ports:
      - "5050:5050"
    environment:
      - FASTAPI_ENV=${FASTAPI_ENV:-DEV}
    env_file:
      - /Users/steffen/sim_api/.docker.env
    depends_on:
      - db
    networks:
      client:
        aliases:
          - sim_api_service

  sim_ir:
    image: sim_ir:latest
    container_name: sim_ir
    ports:
      - "5051:5051"
    environment:
      - FASTAPI_ENV=${FASTAPI_ENV:-DEV}
    env_file:
      - /Users/steffen/sim_ir/.docker.env
    networks:
      client:
        aliases:
          - sim_ir_service

  qdrant:
    image: qdrant/qdrant:master
    container_name: qdrant_container
    restart: unless-stopped
    ports:
      - "6333:6333"  # Qdrant default HTTP port
      - "6334:6334"  # Qdrant default gRPC port
    volumes:
      - ./qdrant_storage:/qdrant/storage  # Persisting data on host
    environment:
      QDRANT__SERVICE__GRPC_PORT: 6334
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__LOG_LEVEL: ERROR
    networks:
      client:
        aliases:
          - qdrant_service

  agentic_ai:
    image: agentic_ai:latest
    container_name: agentic_ai
    ports:
      - "5055:5055"
    env_file:
      - /Users/steffen/agentic_ai/.docker.env
    restart: unless-stopped
    networks:
      backend:
        aliases:
          - agentic_ai_service
      client:
        aliases:
          - agentic_ai_client

networks:
  backend:
  client:
